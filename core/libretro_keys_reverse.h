
// ep128emu-core -- libretro core version of the ep128emu emulator
// Copyright (C) 2022 Zoltan Balogh
// https://github.com/zoltanvb/ep128emu-core
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#ifndef LIBRETROKEYSREVERSE_H__
#define LIBRETROKEYSREVERSE_H__
#include <string.h>

const std::map<std::string, unsigned char> epkey_reverse = {

{"EPKEY_n"       , 0x00},
{"EPKEY_\\"      , 0x01},
{"EPKEY_b"       , 0x02},
{"EPKEY_c"       , 0x03},
{"EPKEY_v"       , 0x04},
{"EPKEY_x"       , 0x05},
{"EPKEY_z"       , 0x06},
{"EPKEY_lshift"  , 0x07},
{"EPKEY_h"       , 0x08},
{"EPKEY_lock"    , 0x09},
{"EPKEY_g"       , 0x0A},
{"EPKEY_d"       , 0x0B},
{"EPKEY_f"       , 0x0C},
{"EPKEY_s"       , 0x0D},
{"EPKEY_a"       , 0x0E},
{"EPKEY_ctrl"    , 0x0F},
{"EPKEY_u"       , 0x10},
{"EPKEY_q"       , 0x11},
{"EPKEY_y"       , 0x12},
{"EPKEY_r"       , 0x13},
{"EPKEY_t"       , 0x14},
{"EPKEY_e"       , 0x15},
{"EPKEY_w"       , 0x16},
{"EPKEY_tab"     , 0x17},
{"EPKEY_7"       , 0x18},
{"EPKEY_1"       , 0x19},
{"EPKEY_6"       , 0x1A},
{"EPKEY_4"       , 0x1B},
{"EPKEY_5"       , 0x1C},
{"EPKEY_3"       , 0x1D},
{"EPKEY_2"       , 0x1E},
{"EPKEY_esc"     , 0x1F},
{"EPKEY_f4"      , 0x20},
{"EPKEY_f8"      , 0x21},
{"EPKEY_f3"      , 0x22},
{"EPKEY_f6"      , 0x23},
{"EPKEY_f5"      , 0x24},
{"EPKEY_f7"      , 0x25},
{"EPKEY_f2"      , 0x26},
{"EPKEY_f1"      , 0x27},
{"EPKEY_8"       , 0x28},
//{"EPKEY_???"     , 0x29},
{"EPKEY_9"       , 0x2A},
{"EPKEY_-"       , 0x2B},
{"EPKEY_0"       , 0x2C},
{"EPKEY_^"       , 0x2D},
{"EPKEY_erase"   , 0x2E},
//{"EPKEY_???"     , 0x2F},
{"EPKEY_j"       , 0x30},
//{"EPKEY_???"     , 0x31},
{"EPKEY_k"       , 0x32},
{"EPKEY_;"       , 0x33},
{"EPKEY_l"       , 0x34},
{"EPKEY_:"       , 0x35},
{"EPKEY_]"       , 0x36},
//{"EPKEY_???"     , 0x37},
{"EPKEY_stop"    , 0x38},
{"EPKEY_down"    , 0x39},
{"EPKEY_right"   , 0x3A},
{"EPKEY_up"      , 0x3B},
{"EPKEY_hold"    , 0x3C},
{"EPKEY_left"    , 0x3D},
{"EPKEY_enter"   , 0x3E},
{"EPKEY_alt"     , 0x3F},
{"EPKEY_m"       , 0x40},
{"EPKEY_del"     , 0x41},
{"EPKEY_,"       , 0x42},
{"EPKEY_/"       , 0x43},
{"EPKEY_."       , 0x44},
{"EPKEY_rshift"  , 0x45},
{"EPKEY_space"   , 0x46},
{"EPKEY_ins"     , 0x47},
{"EPKEY_i"       , 0x48},
//{"EPKEY_???"     , 0x49},
{"EPKEY_o"       , 0x4A},
{"EPKEY_@"       , 0x4B},
{"EPKEY_p"       , 0x4C},
{"EPKEY_["       , 0x4D},
//{"EPKEY_???"     , 0x4E},
//{"EPKEY_???"     , 0x4F},
{"EPKEY_joy1r"   , 0x70},
{"EPKEY_joy1l"   , 0x71},
{"EPKEY_joy1u"   , 0x72},
{"EPKEY_joy1d"   , 0x73},
{"EPKEY_joy1f"   , 0x74},
{"EPKEY_joy1f2"  , 0x75},
{"EPKEY_joy1f3"  , 0x76},
{"EPKEY_joy2r"   , 0x78},
{"EPKEY_joy2l"   , 0x79},
{"EPKEY_joy2u"   , 0x7A},
{"EPKEY_joy2d"   , 0x7B},
{"EPKEY_joy2f"   , 0x7C},
{"EPKEY_joy2f2"  , 0x7D},
{"EPKEY_joy2f3"  , 0x7E},
{"EPKEY_joy3r"   , 0x60},
{"EPKEY_joy3l"   , 0x61},
{"EPKEY_joy3u"   , 0x62},
{"EPKEY_joy3d"   , 0x63},
{"EPKEY_joy3f"   , 0x64},
{"EPKEY_joy4r"   , 0x68},
{"EPKEY_joy4l"   , 0x69},
{"EPKEY_joy4u"   , 0x6A},
{"EPKEY_joy4d"   , 0x6B},
{"EPKEY_joy4f"   , 0x6C},
{"EPKEY_joy5r"   , 0x50},
{"EPKEY_joy5l"   , 0x51},
{"EPKEY_joy5u"   , 0x52},
{"EPKEY_joy5d"   , 0x53},
{"EPKEY_joy5f"   , 0x54},
{"EPKEY_joy6r"   , 0x58},
{"EPKEY_joy6l"   , 0x59},
{"EPKEY_joy6u"   , 0x5A},
{"EPKEY_joy6d"   , 0x5B},
{"EPKEY_joy6f"   , 0x5C},
{"EPKEY_info"    , 0xFE},
{"EPKEY_zoom"    , 0xFF},
};

// The last component is lowercase as it will be mapped directly from .ep128cfg file where it is used as lowercase
const std::map<std::string, unsigned char> retro_joypad_reverse = {

{"RETRO_DEVICE_ID_JOYPAD_b"       , 0},
{"RETRO_DEVICE_ID_JOYPAD_y"       , 1},
{"RETRO_DEVICE_ID_JOYPAD_select"  , 2},
{"RETRO_DEVICE_ID_JOYPAD_start"   , 3},
{"RETRO_DEVICE_ID_JOYPAD_up"      , 4},
{"RETRO_DEVICE_ID_JOYPAD_down"    , 5},
{"RETRO_DEVICE_ID_JOYPAD_left"    , 6},
{"RETRO_DEVICE_ID_JOYPAD_right"   , 7},
{"RETRO_DEVICE_ID_JOYPAD_a"       , 8},
{"RETRO_DEVICE_ID_JOYPAD_x"       , 9},
{"RETRO_DEVICE_ID_JOYPAD_l"       ,10},
{"RETRO_DEVICE_ID_JOYPAD_r"       ,11},
{"RETRO_DEVICE_ID_JOYPAD_l2"      ,12},
{"RETRO_DEVICE_ID_JOYPAD_r2"      ,13},
{"RETRO_DEVICE_ID_JOYPAD_l3"      ,14},
{"RETRO_DEVICE_ID_JOYPAD_r3"      ,15}
};




const std::map<std::string, int> retrok_reverse = {
   {"RETROK_UNKNOWN"        , 0},
   {"RETROK_FIRST"          , 0},
   {"RETROK_BACKSPACE"      , 8},
   {"RETROK_TAB"            , 9},
   {"RETROK_CLEAR"          , 12},
   {"RETROK_RETURN"         , 13},
   {"RETROK_PAUSE"          , 19},
   {"RETROK_ESCAPE"         , 27},
   {"RETROK_SPACE"          , 32},
   {"RETROK_EXCLAIM"        , 33},
   {"RETROK_QUOTEDBL"       , 34},
   {"RETROK_HASH"           , 35},
   {"RETROK_DOLLAR"         , 36},
   {"RETROK_AMPERSAND"      , 38},
   {"RETROK_QUOTE"          , 39},
   {"RETROK_LEFTPAREN"      , 40},
   {"RETROK_RIGHTPAREN"     , 41},
   {"RETROK_ASTERISK"       , 42},
   {"RETROK_PLUS"           , 43},
   {"RETROK_COMMA"          , 44},
   {"RETROK_MINUS"          , 45},
   {"RETROK_PERIOD"         , 46},
   {"RETROK_SLASH"         , 47},
   {"RETROK_0"              , 48},
   {"RETROK_1"              , 49},
   {"RETROK_2"              , 50},
   {"RETROK_3"             , 51},
   {"RETROK_4"             , 52},
   {"RETROK_5"              , 53},
   {"RETROK_6"              , 54},
   {"RETROK_7"              , 55},
   {"RETROK_8"              , 56},
   {"RETROK_9"              , 57},
   {"RETROK_COLON"          , 58},
   {"RETROK_SEMICOLON"      , 59},
   {"RETROK_LESS"           , 60},
   {"RETROK_EQUALS"         , 61},
   {"RETROK_GREATER"        , 62},
   {"RETROK_QUESTION"       , 63},
   {"RETROK_AT"             , 64},
   {"RETROK_LEFTBRACKET"    , 91},
   {"RETROK_BACKSLASH"      , 92},
   {"RETROK_RIGHTBRACKET"   , 93},
   {"RETROK_CARET"          , 94},
   {"RETROK_UNDERSCORE"     , 95},
   {"RETROK_BACKQUOTE"      , 96},
   {"RETROK_a"              , 97},
   {"RETROK_b"              , 98},
   {"RETROK_c"              , 99},
   {"RETROK_d"              , 100},
   {"RETROK_e"             , 101},
   {"RETROK_f"              , 102},
   {"RETROK_g"              , 103},
   {"RETROK_h"              , 104},
   {"RETROK_i"              , 105},
   {"RETROK_j"              , 106},
   {"RETROK_k"              , 107},
   {"RETROK_l"              , 108},
   {"RETROK_m"              , 109},
   {"RETROK_n"              , 110},
   {"RETROK_o"              , 111},
   {"RETROK_p"              , 112},
   {"RETROK_q"              , 113},
   {"RETROK_r"              , 114},
   {"RETROK_s"              , 115},
   {"RETROK_t"              , 116},
   {"RETROK_u"              , 117},
   {"RETROK_v"              , 118},
   {"RETROK_w"              , 119},
   {"RETROK_x"              , 120},
   {"RETROK_y"              , 121},
   {"RETROK_z"              , 122},
   {"RETROK_DELETE"         , 127},

   {"RETROK_KP0"            , 256},
   {"RETROK_KP1"            , 257},
   {"RETROK_KP2"            , 258},
   {"RETROK_KP3"            , 259},
   {"RETROK_KP4"            , 260},
   {"RETROK_KP5"            , 261},
   {"RETROK_KP6"            , 262},
   {"RETROK_KP7"            , 263},
   {"RETROK_KP8"            , 264},
   {"RETROK_KP9"            , 265},
   {"RETROK_KP_PERIOD"      , 266},
   {"RETROK_KP_DIVIDE"      , 267},
   {"RETROK_KP_MULTIPLY"    , 268},
   {"RETROK_KP_MINUS"       , 269},
   {"RETROK_KP_PLUS"        , 270},
   {"RETROK_KP_ENTER"       , 271},
   {"RETROK_KP_EQUALS"      , 272},

   {"RETROK_UP"             , 273},
   {"RETROK_DOWN"           , 274},
   {"RETROK_RIGHT"          , 275},
   {"RETROK_LEFT"           , 276},
   {"RETROK_INSERT"         , 277},
   {"RETROK_HOME"           , 278},
   {"RETROK_END"            , 279},
   {"RETROK_PAGEUP"         , 280},
   {"RETROK_PAGEDOWN"       , 281},

   {"RETROK_F1"             , 282},
   {"RETROK_F2"             , 283},
   {"RETROK_F3"             , 284},
   {"RETROK_F4"             , 285},
   {"RETROK_F5"             , 286},
   {"RETROK_F6"             , 287},
   {"RETROK_F7"             , 288},
   {"RETROK_F8"             , 289},
   {"RETROK_F9"             , 290},
   {"RETROK_F10"            , 291},
   {"RETROK_F11"            , 292},
   {"RETROK_F12"            , 293},
   {"RETROK_F13"            , 294},
   {"RETROK_F14"            , 295},
   {"RETROK_F15"            , 296},

   {"RETROK_NUMLOCK"        , 300},
   {"RETROK_CAPSLOCK"       , 301},
   {"RETROK_SCROLLOCK"      , 302},
   {"RETROK_RSHIFT"         , 303},
   {"RETROK_LSHIFT"         , 304},
   {"RETROK_RCTRL"          , 305},
   {"RETROK_LCTRL"          , 306},
   {"RETROK_RALT"           , 307},
   {"RETROK_LALT"           , 308},
   {"RETROK_RMETA"          , 309},
   {"RETROK_LMETA"          , 310},
   {"RETROK_LSUPER"         , 311},
   {"RETROK_RSUPER"         , 312},
   {"RETROK_MODE"           , 313},
   {"RETROK_COMPOSE"        , 314},

   {"RETROK_HELP"           , 315},
   {"RETROK_PRINT"          , 316},
   {"RETROK_SYSREQ"         , 317},
   {"RETROK_BREAK"          , 318},
   {"RETROK_MENU"           , 319},
   {"RETROK_POWER"          , 320},
   {"RETROK_EURO"           , 321},
   {"RETROK_UNDO"           , 322}
};


#endif
