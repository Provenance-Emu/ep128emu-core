# data file for the Fltk User Interface Designer (fluid)
version 1.0109 
do_not_include_H_from_C 
header_name {.hpp} 
code_name {.cpp}
decl {\#include "gui.hpp"} {selected
} 

class Ep128EmuGUI_MachineConfigWindow {open
} {
  decl {Ep128EmuGUI& gui;} {}
  Function {Ep128EmuGUI_MachineConfigWindow(Ep128EmuGUI& gui_) : gui(gui_)} {open
  } {
    Fl_Window window {
      label {Machine configuration}
      callback {{
  try {
    gui.applyEmulatorConfiguration();
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
  window->hide();
}} open
      xywh {182 139 400 450} type Double color 48 visible
    } {
      Fl_Button {} {
        label Apply
        callback {{
  try {
    gui.applyEmulatorConfiguration();
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
}}
        xywh {255 415 60 25} selection_color 50
      }
      Fl_Button {} {
        label OK
        callback {{
  try {
    gui.applyEmulatorConfiguration();
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
  window->hide();
}}
        xywh {325 415 60 25} selection_color 50
      }
      Fl_Tabs {} {open
        xywh {10 10 380 395}
      } {
        Fl_Group {} {
          label General open
          xywh {10 35 380 370}
        } {
          Fl_Group {} {
            label {Clock frequency and timing settings} open
            xywh {20 45 360 168} box ENGRAVED_FRAME align 21
          } {
            Fl_Value_Input vmCPUFrequencyValuator {
              label {CPU frequency}
              callback {{
  try {
    gui.config["vm.cpuClockFrequency"] = (unsigned int) (o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  o->value(double(gui.config.vm.cpuClockFrequency));
}}
              xywh {30 70 120 25} align 8 when 4 minimum 2e+06 maximum 2.5e+08 step 1 value 4e+06
              code0 {o->cursor_color(Fl_Color(3));}
            }
            Fl_Value_Input vmVideoFrequencyValuator {
              label {Video clock frequency (Hz)}
              callback {{
  try {
    gui.config["vm.videoClockFrequency"] = (unsigned int) (o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  updateWindow();
}}
              xywh {30 105 120 25} align 8 when 4 minimum 178125 maximum 1.78125e+06 step 1 value 890625
              code0 {o->cursor_color(Fl_Color(3));}
            }
            Fl_Value_Input vmSoundClockFrequencyValuator {
              label {Sound clock frequency (Hz)}
              callback {{
  try {
    gui.config["vm.soundClockFrequency"] = (unsigned int) (o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  o->value(double(gui.config.vm.soundClockFrequency));
}}
              xywh {30 140 120 25} align 8 when 4 minimum 250000 maximum 1e+06 step 1 value 500000
              code0 {o->cursor_color(Fl_Color(3));}
            }
            Fl_Light_Button enableMemoryTimingValuator {
              label {Enable memory timing emulation}
              callback {{
  gui.config.vm.enableMemoryTimingEmulation = (o->value() != 0);
  gui.config.vmConfigurationChanged = true;
}}
              xywh {30 175 240 25} color 50 selection_color 3
            }
          }
          Fl_Group {} {
            label {File I/O} open
            xywh {20 223 360 64} box ENGRAVED_FRAME align 21
          } {
            Fl_Light_Button vmEnableFileIOValuator {
              label {Enable virtual file I/O}
              callback {{
  gui.config.vm.enableFileIO = (o->value() != 0);
  gui.config.vmConfigurationChanged = true;
}}
              tooltip {If enabled, the emulated machine can directly access files in the working directory if the ROM module for this function is loaded (epfileio.rom to segment 10)} xywh {30 248 240 25} color 50 selection_color 3
            }
          }
          Fl_Group {} {
            label {Video capture settings} open
            xywh {20 297 360 98} box ENGRAVED_FRAME align 21
          } {
            Fl_Value_Input videoCaptureFrameRateValuator {
              label {Frame rate}
              callback {{
  gui.config.videoCapture.frameRate = int(o->clamp(o->value()) + 0.5);
  gui.config.videoCaptureSettingsChanged = true;
}}
              tooltip {Number of frames per second for video recording; the allowed settings are 24, 25, 30, 32, 40, 48, 50, and 60} xywh {30 322 120 25} align 8 when 4 minimum 24 maximum 60 step 1 value 50
              code0 {o->cursor_color(Fl_Color(3));}
            }
            Fl_Light_Button videoCaptureYUVFormatValuator {
              label {Low resolution YUV format}
              callback {{
  gui.config.videoCapture.yuvFormat = (o->value() != 0);
  gui.config.videoCaptureSettingsChanged = true;
}}
              tooltip {Write AVI video data in 384x288 YV12 format instead of 768x576 RLE8} xywh {30 357 240 25} color 50 selection_color 3
            }
          }
        }
        Fl_Group {} {
          label Memory open
          xywh {10 35 380 370} hide
        } {
          Fl_Value_Input memoryRAMSizeValuator {
            label {RAM size in kilobytes}
            callback {{
  try {
    gui.config["memory.ram.size"] = int(o->clamp(o->value()) + 0.5);
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
  o->value(double(gui.config.memory.ram.size));
}}
            xywh {20 45 120 25} align 8 when 4 minimum 16 maximum 4096 step 16 value 64
            code0 {o->cursor_color(Fl_Color(3));}
          }
          Fl_Scroll {} {
            label {ROM images} open
            xywh {20 95 360 300} box DOWN_BOX color 48 align 5
          } {
            Fl_Group {} {open
              xywh {25 100 325 755} box FLAT_BOX color 48
            } {
              Fl_Box {} {
                label Segment
                xywh {30 105 75 20} color 48 align 20
              }
              Fl_Box {} {
                label {File name}
                xywh {110 105 80 20} color 48 align 20
              }
              Fl_Box {} {
                label {File offset}
                xywh {270 105 75 20} color 48 align 20
              }
              Fl_Box {} {
                label 00
                xywh {30 130 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM00FileNameValuator {
                callback {{
  setROMImageFile(0x00, o->value());
}}
                xywh {75 130 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x00);
}}
                xywh {245 130 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM00OffsetValuator {
                callback {{
  gui.config.memory.rom[0x00].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x00].offset));
}}
                xywh {280 130 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 01
                xywh {30 160 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM01FileNameValuator {
                callback {{
  setROMImageFile(0x01, o->value());
}}
                xywh {75 160 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x01);
}}
                xywh {245 160 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM01OffsetValuator {
                callback {{
  gui.config.memory.rom[0x01].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x01].offset));
}}
                xywh {280 160 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 02
                xywh {30 190 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM02FileNameValuator {
                callback {{
  setROMImageFile(0x02, o->value());
}}
                xywh {75 190 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x02);
}}
                xywh {245 190 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM02OffsetValuator {
                callback {{
  gui.config.memory.rom[0x02].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x02].offset));
}}
                xywh {280 190 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 03
                xywh {30 220 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM03FileNameValuator {
                callback {{
  setROMImageFile(0x03, o->value());
}}
                xywh {75 220 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x03);
}}
                xywh {245 220 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM03OffsetValuator {
                callback {{
  gui.config.memory.rom[0x03].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x03].offset));
}}
                xywh {280 220 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 04
                xywh {30 250 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM04FileNameValuator {
                callback {{
  setROMImageFile(0x04, o->value());
}}
                xywh {75 250 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x04);
}}
                xywh {245 250 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM04OffsetValuator {
                callback {{
  gui.config.memory.rom[0x04].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x04].offset));
}}
                xywh {280 250 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 05
                xywh {30 280 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM05FileNameValuator {
                callback {{
  setROMImageFile(0x05, o->value());
}}
                xywh {75 280 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x05);
}}
                xywh {245 280 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM05OffsetValuator {
                callback {{
  gui.config.memory.rom[0x05].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x05].offset));
}}
                xywh {280 280 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 06
                xywh {30 310 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM06FileNameValuator {
                callback {{
  setROMImageFile(0x06, o->value());
}}
                xywh {75 310 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x06);
}}
                xywh {245 310 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM06OffsetValuator {
                callback {{
  gui.config.memory.rom[0x06].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x06].offset));
}}
                xywh {280 310 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 07
                xywh {30 340 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM07FileNameValuator {
                callback {{
  setROMImageFile(0x07, o->value());
}}
                xywh {75 340 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x07);
}}
                xywh {245 340 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM07OffsetValuator {
                callback {{
  gui.config.memory.rom[0x07].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x07].offset));
}}
                xywh {280 340 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 10
                xywh {30 370 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM10FileNameValuator {
                callback {{
  setROMImageFile(0x10, o->value());
}}
                xywh {75 370 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x10);
}}
                xywh {245 370 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM10OffsetValuator {
                callback {{
  gui.config.memory.rom[0x10].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x10].offset));
}}
                xywh {280 370 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 11
                xywh {30 400 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM11FileNameValuator {
                callback {{
  setROMImageFile(0x11, o->value());
}}
                xywh {75 400 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x11);
}}
                xywh {245 400 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM11OffsetValuator {
                callback {{
  gui.config.memory.rom[0x11].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x11].offset));
}}
                xywh {280 400 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 12
                xywh {30 430 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM12FileNameValuator {
                callback {{
  setROMImageFile(0x12, o->value());
}}
                xywh {75 430 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x12);
}}
                xywh {245 430 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM12OffsetValuator {
                callback {{
  gui.config.memory.rom[0x12].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x12].offset));
}}
                xywh {280 430 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 13
                xywh {30 460 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM13FileNameValuator {
                callback {{
  setROMImageFile(0x13, o->value());
}}
                xywh {75 460 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x13);
}}
                xywh {245 460 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM13OffsetValuator {
                callback {{
  gui.config.memory.rom[0x13].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x13].offset));
}}
                xywh {280 460 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 20
                xywh {30 490 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM20FileNameValuator {
                callback {{
  setROMImageFile(0x20, o->value());
}}
                xywh {75 490 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x20);
}}
                xywh {245 490 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM20OffsetValuator {
                callback {{
  gui.config.memory.rom[0x20].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x20].offset));
}}
                xywh {280 490 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 21
                xywh {30 520 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM21FileNameValuator {
                callback {{
  setROMImageFile(0x21, o->value());
}}
                xywh {75 520 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x21);
}}
                xywh {245 520 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM21OffsetValuator {
                callback {{
  gui.config.memory.rom[0x21].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x21].offset));
}}
                xywh {280 520 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 22
                xywh {30 550 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM22FileNameValuator {
                callback {{
  setROMImageFile(0x22, o->value());
}}
                xywh {75 550 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x22);
}}
                xywh {245 550 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM22OffsetValuator {
                callback {{
  gui.config.memory.rom[0x22].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x22].offset));
}}
                xywh {280 550 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 23
                xywh {30 580 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM23FileNameValuator {
                callback {{
  setROMImageFile(0x23, o->value());
}}
                xywh {75 580 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x23);
}}
                xywh {245 580 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM23OffsetValuator {
                callback {{
  gui.config.memory.rom[0x23].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x23].offset));
}}
                xywh {280 580 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 30
                xywh {30 610 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM30FileNameValuator {
                callback {{
  setROMImageFile(0x30, o->value());
}}
                xywh {75 610 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x30);
}}
                xywh {245 610 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM30OffsetValuator {
                callback {{
  gui.config.memory.rom[0x30].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x30].offset));
}}
                xywh {280 610 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 31
                xywh {30 640 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM31FileNameValuator {
                callback {{
  setROMImageFile(0x31, o->value());
}}
                xywh {75 640 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x31);
}}
                xywh {245 640 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM31OffsetValuator {
                callback {{
  gui.config.memory.rom[0x31].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x31].offset));
}}
                xywh {280 640 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 32
                xywh {30 670 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM32FileNameValuator {
                callback {{
  setROMImageFile(0x32, o->value());
}}
                xywh {75 670 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x32);
}}
                xywh {245 670 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM32OffsetValuator {
                callback {{
  gui.config.memory.rom[0x32].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x32].offset));
}}
                xywh {280 670 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 33
                xywh {30 700 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM33FileNameValuator {
                callback {{
  setROMImageFile(0x33, o->value());
}}
                xywh {75 700 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x33);
}}
                xywh {245 700 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM33OffsetValuator {
                callback {{
  gui.config.memory.rom[0x33].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x33].offset));
}}
                xywh {280 700 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 40
                xywh {30 730 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM40FileNameValuator {
                callback {{
  setROMImageFile(0x40, o->value());
}}
                xywh {75 730 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x40);
}}
                xywh {245 730 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM40OffsetValuator {
                callback {{
  gui.config.memory.rom[0x40].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x40].offset));
}}
                xywh {280 730 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 41
                xywh {30 760 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM41FileNameValuator {
                callback {{
  setROMImageFile(0x41, o->value());
}}
                xywh {75 760 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x41);
}}
                xywh {245 760 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM41OffsetValuator {
                callback {{
  gui.config.memory.rom[0x41].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x41].offset));
}}
                xywh {280 760 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 42
                xywh {30 790 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM42FileNameValuator {
                callback {{
  setROMImageFile(0x42, o->value());
}}
                xywh {75 790 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x42);
}}
                xywh {245 790 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM42OffsetValuator {
                callback {{
  gui.config.memory.rom[0x42].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x42].offset));
}}
                xywh {280 790 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Box {} {
                label 43
                xywh {30 820 35 25} box DOWN_BOX color 7
              }
              Fl_Input memoryROM43FileNameValuator {
                callback {{
  setROMImageFile(0x43, o->value());
}}
                xywh {75 820 165 25}
                code0 {o->cursor_color(Fl_Color(3));}
              }
              Fl_Button {} {
                label {...}
                callback {{
  browseROMImageFile(0x43);
}}
                xywh {245 820 25 25} selection_color 50
              }
              Fl_Value_Input memoryROM43OffsetValuator {
                callback {{
  gui.config.memory.rom[0x43].offset = int(o->clamp(o->value()) + 0.5);
  gui.config.memoryConfigurationChanged = true;
  o->value(double(gui.config.memory.rom[0x43].offset));
}}
                xywh {280 820 65 25} when 4 maximum 999999 step 1
                code0 {o->cursor_color(Fl_Color(3));}
              }
            }
          }
        }
        Fl_Group {} {
          label Tape open
          xywh {10 35 380 370} hide
        } {
          Fl_Group {} {
            label {General tape emulation settings} open
            xywh {20 45 360 65} box ENGRAVED_FRAME align 21
          } {
            Fl_Value_Input tapeDefaultSampleRateValuator {
              label {Default tape sample rate (Hz)}
              callback {{
  gui.config.tape.defaultSampleRate = int(o->clamp(o->value()) + 0.5);
  gui.config.tapeSettingsChanged = true;
  o->value(double(gui.config.tape.defaultSampleRate));
}}
              xywh {30 70 120 25} align 8 when 4 minimum 10000 maximum 120000 step 1 value 24000
              code0 {o->cursor_color(Fl_Color(3));}
            }
          }
          Fl_Group {} {
            label {Sound file input} open
            xywh {20 120 360 100} box ENGRAVED_FRAME align 21
          } {
            Fl_Value_Input tapeChannelValuator {
              label {Channel number}
              callback {{
  gui.config.tape.soundFileChannel = int(o->clamp(o->value()) + 0.5);
  gui.config.tapeSoundFileSettingsChanged = true;
  o->value(double(gui.config.tape.soundFileChannel));
}}
              tooltip {Channel to use in multichannel sound files (for stereo files, channel 0 is left, and channel 1 is right)} xywh {30 145 40 25} align 8 when 4 maximum 15 step 1
              code0 {o->cursor_color(Fl_Color(3));}
            }
            Fl_Light_Button tapeEnableFilterValuator {
              label {Enable filter}
              callback {{
  gui.config.tape.enableSoundFileFilter = (o->value() != 0);
  gui.config.tapeSoundFileSettingsChanged = true;
}}
              tooltip {Apply a linear phase FIR bandpass filter to sound file input (enabling this increases CPU usage)} xywh {30 180 160 25} color 50 selection_color 3
            }
            Fl_Value_Slider tapeMinFreqValuator {
              label {Min freq}
              callback {{
  gui.config.tape.soundFileFilterMinFreq = o->value();
  gui.config.tapeSoundFileSettingsChanged = true;
}}
              tooltip {The lowest frequency not attenuated by the bandpass filter (if enabled) in Hz} xywh {260 146 110 23} type Horizontal color 47 selection_color 52 align 4 maximum 2000 step 1 value 500
            }
            Fl_Value_Slider tapeMaxFreqValuator {
              label {Max freq}
              callback {{
  gui.config.tape.soundFileFilterMaxFreq = o->value();
  gui.config.tapeSoundFileSettingsChanged = true;
}}
              tooltip {The highest frequency not attenuated by the bandpass filter (if enabled) in Hz} xywh {260 181 110 23} type Horizontal color 47 selection_color 52 align 4 minimum 1000 maximum 20000 step 10 value 5000
            }
          }
        }
      }
    }
  }
  Function {~Ep128EmuGUI_MachineConfigWindow()} {open
  } {
    code {{
  delete window;
}} {}
  }
  Function {show()} {open return_type void
  } {
    code {{
  updateWindow();
  window->show();
}} {}
  }
  Function {shown()} {open return_type bool
  } {
    code {{
  return bool(window->shown());
}} {}
  }
  Function {hide()} {open return_type void
  } {
    code {{
  window->hide();
}} {}
  }
  Function {updateWindow()} {open return_type void
  } {
    code {{
  vmCPUFrequencyValuator->value(double(gui.config.vm.cpuClockFrequency));
  vmVideoFrequencyValuator->value(double(gui.config.vm.videoClockFrequency));
  vmSoundClockFrequencyValuator->value(double(gui.config.vm.soundClockFrequency));
  enableMemoryTimingValuator->value(gui.config.vm.enableMemoryTimingEmulation ? 1 : 0);
  vmEnableFileIOValuator->value(gui.config.vm.enableFileIO ? 1 : 0);
  videoCaptureFrameRateValuator->value(double(gui.config.videoCapture.frameRate));
  videoCaptureYUVFormatValuator->value(gui.config.videoCapture.yuvFormat ? 1 : 0);
  memoryRAMSizeValuator->value(double(gui.config.memory.ram.size));
  memoryROM00FileNameValuator->value(gui.config.memory.rom[0x00].file.c_str());
  memoryROM00OffsetValuator->value(double(gui.config.memory.rom[0x00].offset));
  memoryROM01FileNameValuator->value(gui.config.memory.rom[0x01].file.c_str());
  memoryROM01OffsetValuator->value(double(gui.config.memory.rom[0x01].offset));
  memoryROM02FileNameValuator->value(gui.config.memory.rom[0x02].file.c_str());
  memoryROM02OffsetValuator->value(double(gui.config.memory.rom[0x02].offset));
  memoryROM03FileNameValuator->value(gui.config.memory.rom[0x03].file.c_str());
  memoryROM03OffsetValuator->value(double(gui.config.memory.rom[0x03].offset));
  memoryROM04FileNameValuator->value(gui.config.memory.rom[0x04].file.c_str());
  memoryROM04OffsetValuator->value(double(gui.config.memory.rom[0x04].offset));
  memoryROM05FileNameValuator->value(gui.config.memory.rom[0x05].file.c_str());
  memoryROM05OffsetValuator->value(double(gui.config.memory.rom[0x05].offset));
  memoryROM06FileNameValuator->value(gui.config.memory.rom[0x06].file.c_str());
  memoryROM06OffsetValuator->value(double(gui.config.memory.rom[0x06].offset));
  memoryROM07FileNameValuator->value(gui.config.memory.rom[0x07].file.c_str());
  memoryROM07OffsetValuator->value(double(gui.config.memory.rom[0x07].offset));
  memoryROM10FileNameValuator->value(gui.config.memory.rom[0x10].file.c_str());
  memoryROM10OffsetValuator->value(double(gui.config.memory.rom[0x10].offset));
  memoryROM11FileNameValuator->value(gui.config.memory.rom[0x11].file.c_str());
  memoryROM11OffsetValuator->value(double(gui.config.memory.rom[0x11].offset));
  memoryROM12FileNameValuator->value(gui.config.memory.rom[0x12].file.c_str());
  memoryROM12OffsetValuator->value(double(gui.config.memory.rom[0x12].offset));
  memoryROM13FileNameValuator->value(gui.config.memory.rom[0x13].file.c_str());
  memoryROM13OffsetValuator->value(double(gui.config.memory.rom[0x13].offset));
  memoryROM20FileNameValuator->value(gui.config.memory.rom[0x20].file.c_str());
  memoryROM20OffsetValuator->value(double(gui.config.memory.rom[0x20].offset));
  memoryROM21FileNameValuator->value(gui.config.memory.rom[0x21].file.c_str());
  memoryROM21OffsetValuator->value(double(gui.config.memory.rom[0x21].offset));
  memoryROM22FileNameValuator->value(gui.config.memory.rom[0x22].file.c_str());
  memoryROM22OffsetValuator->value(double(gui.config.memory.rom[0x22].offset));
  memoryROM23FileNameValuator->value(gui.config.memory.rom[0x23].file.c_str());
  memoryROM23OffsetValuator->value(double(gui.config.memory.rom[0x23].offset));
  memoryROM30FileNameValuator->value(gui.config.memory.rom[0x30].file.c_str());
  memoryROM30OffsetValuator->value(double(gui.config.memory.rom[0x30].offset));
  memoryROM31FileNameValuator->value(gui.config.memory.rom[0x31].file.c_str());
  memoryROM31OffsetValuator->value(double(gui.config.memory.rom[0x31].offset));
  memoryROM32FileNameValuator->value(gui.config.memory.rom[0x32].file.c_str());
  memoryROM32OffsetValuator->value(double(gui.config.memory.rom[0x32].offset));
  memoryROM33FileNameValuator->value(gui.config.memory.rom[0x33].file.c_str());
  memoryROM33OffsetValuator->value(double(gui.config.memory.rom[0x33].offset));
  memoryROM40FileNameValuator->value(gui.config.memory.rom[0x40].file.c_str());
  memoryROM40OffsetValuator->value(double(gui.config.memory.rom[0x40].offset));
  memoryROM41FileNameValuator->value(gui.config.memory.rom[0x41].file.c_str());
  memoryROM41OffsetValuator->value(double(gui.config.memory.rom[0x41].offset));
  memoryROM42FileNameValuator->value(gui.config.memory.rom[0x42].file.c_str());
  memoryROM42OffsetValuator->value(double(gui.config.memory.rom[0x42].offset));
  memoryROM43FileNameValuator->value(gui.config.memory.rom[0x43].file.c_str());
  memoryROM43OffsetValuator->value(double(gui.config.memory.rom[0x43].offset));
  tapeDefaultSampleRateValuator->value(double(gui.config.tape.defaultSampleRate));
  tapeChannelValuator->value(double(gui.config.tape.soundFileChannel));
  tapeEnableFilterValuator->value(gui.config.tape.enableSoundFileFilter ? 1 : 0);
  tapeMinFreqValuator->value(gui.config.tape.soundFileFilterMinFreq);
  tapeMaxFreqValuator->value(gui.config.tape.soundFileFilterMaxFreq);
}} {}
  }
  Function {setROMImageFile(uint8_t segment_, const std::string& fileName_)} {open private return_type void
  } {
    code {{
  try {
    char    cfgVarName[24];
    std::sprintf(&(cfgVarName[0]), "memory.rom.%02X.file", (unsigned int) segment_);
    Ep128Emu::ConfigurationDB::ConfigurationVariable& cv = gui.config[&(cfgVarName[0])];
    bool    wasEmpty = (std::string(cv).length() <= 0);
    cv = fileName_;
    std::string fName = std::string(cv);
    if (fName.length() > 0) {
      std::FILE *f = std::fopen(fName.c_str(), "rb");
      long    fSize = 0L;
      if (f) {
        if (std::fseek(f, 0L, SEEK_END) >= 0)
          fSize = std::ftell(f);
        std::fclose(f);
        f = (std::FILE *) 0;
      }
      long    offs = long(gui.config.memory.rom[segment_].offset);
      bool    updateFlag = false;
      while ((offs + 32767L) < fSize && (segment_ & 0x03) != 0x03) {
        segment_++;
        offs = offs + 16384L;
        updateFlag = true;
        gui.config.memory.rom[segment_].offset = int(offs);
        std::sprintf(&(cfgVarName[0]), "memory.rom.%02X.file", (unsigned int) segment_);
        gui.config[&(cfgVarName[0])] = fName;
      }
      if (updateFlag)
        updateWindow();
    }
    else if (!wasEmpty) {
      if (gui.config.memory.rom[segment_].offset != 0) {
        gui.config.memory.rom[segment_].offset = 0;
        updateWindow();
      }
    }
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
}} {}
  }
  Function {browseROMImageFile(uint8_t segment_)} {open private return_type void
  } {
    code {{
  try {
    std::string tmp;
    if (gui.browseFile(tmp, gui.romImageDirectory,
                       "ROM image files\\t*.rom",
                       Fl_Native_File_Chooser::BROWSE_FILE,
                       "Select ROM image file")) {
      setROMImageFile(segment_, tmp);
      switch (segment_) {
      case 0x00:
        memoryROM00FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x01:
        memoryROM01FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x02:
        memoryROM02FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x03:
        memoryROM03FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x04:
        memoryROM04FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x05:
        memoryROM05FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x06:
        memoryROM06FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x07:
        memoryROM07FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x10:
        memoryROM10FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x11:
        memoryROM11FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x12:
        memoryROM12FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x13:
        memoryROM13FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x20:
        memoryROM20FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x21:
        memoryROM21FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x22:
        memoryROM22FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x23:
        memoryROM23FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x30:
        memoryROM30FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x31:
        memoryROM31FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x32:
        memoryROM32FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x33:
        memoryROM33FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x40:
        memoryROM40FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x41:
        memoryROM41FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x42:
        memoryROM42FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      case 0x43:
        memoryROM43FileNameValuator->value(gui.config.memory.rom[segment_].file.c_str());
        break;
      }
    }
  }
  catch (std::exception& e) {
    gui.errorMessage(e.what());
  }
}} {}
  }
} 
